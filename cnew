#! /usr/bin/perl

use strict;

# use Barefoot::debug;							# comment out for production

use Getopt::Std;
use Cwd qw(getcwd);
use Barefoot::cvs;
use Barefoot::input qw(get_yn);

my $me = $0;
$me =~ s@^.*/@@;

# default values
my $verbose=0;
my $cvsroot=$::ENV{CVSROOT};

#################################
# OPTIONS AND ENVIRONMENT VARS
#################################

my $opt = {};
getopts('vd:', $opt);
$verbose = 1 if defined $opt->{v};
$cvsroot = $opt->{d} if defined $opt->{d};


#################################
# CHECK FOR ERRORS
#################################

if (!$cvsroot)
{
	print STDERR "$me: variable CVSROOT must be set\n";
	exit 2;
}

my $offsite = cvs::is_offsite($cvsroot);
my $module = $ARGV[0];

if (!$module)
{
	print STDERR "usage: $me module\n";
	exit 2;
}

if (!-r $module)
{
	print STDERR "$me: $module does not exist or is not readable\n";
	exit 2;
}

my ($project, $subdir) = cvs::parse_module(getcwd());
if ( !$offsite )
{
	if (-e "$cvsroot/$project/$subdir/$module,v")
	{
		print STDERR "$me: $module appears to be already checked into CVS\n";
		exit 2;
	}
}


#################################
# MAIN
#################################

if ( $^O =~ /MSWin32/ )
{
	open(ADD, "cvs -d $cvsroot add $module |") or 
								die "can't execute cvs add\n"; 
}
else
{
	open(ADD, "cvs -d $cvsroot add $module 2>&1 |") or 
								die "can't execute cvs add\n"; 
}

while ( <ADD> )
{
	chomp;
	next if ( /use \'cvs commit\'/ || /^done/ );
	
	if ( /server\: (.*)/ )
	{
		print "$me: $1\n";
	}
	else
	{
		# don't know what this line is
		print "$me: $_\n";
	}
}
close(ADD);


# commit is not needed for directories
unless (-d $module)
{
	if ( $^O =~ /MSWin32/ )
	{
		open(COM, "cvs -r -d $cvsroot commit -m\"initial version\" $module |") 
			unless $?;
	}
	else
	{
		open(COM, "cvs -r -d $cvsroot commit -m\"initial version\" $module 2>&1 |") 
			unless $?;
	}

	while ( <COM> )
	{
		chomp;
		next if ( /^done/ );
			
		if ( /server\: (.*)/ )
		{
			print "$me: $1\n";
		}
		else
		{
			# don't know what this line is
			print "$me: $_\n";
		}
	}
	close(COM);

	# don't think this is needed with -r above, regardless won't work offsite
	if ( !$offsite )
	{
		system("chmod a-w $module") unless $?;
	}
}

print "done\n" unless $?;
