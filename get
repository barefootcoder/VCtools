#! /usr/bin/perl

use strict;

# use Barefoot::debug;							# comment out for production

use Getopt::Std;
use Cwd qw(getcwd);
use Barefoot::cvs;
use Barefoot::input qw(get_yn);

my $me = $0;
$me =~ s@^.*/@@;


# default values
my $verbose=0;
my $cvsroot=$::ENV{CVSROOT};


#################################
# OPTIONS AND ENVIRONMENT VARS
#################################

my $opt = {};
getopts('vd:', $opt);
$verbose = 1 if defined $opt->{v};
$cvsroot = $opt->{d} if defined $opt->{d};

#################################
# CHECK FOR ERRORS
#################################

if (!$cvsroot )
{
	print STDERR "$me: variable CVSROOT must be set\n";
	exit 2;
}

my $offsite = cvs::is_offsite($cvsroot);
my $module = $ARGV[0];
print $module . "\n";

if (!$module)
{
	print STDERR "usage: $me module\n";
	exit 2;
}

if (!-r $module)
{
	print STDERR "$me: $module does not exist or is not readable\n";
	exit 2;
}

my ($project, $subdir) = cvs::parse_module(getcwd());


if ( !$offsite )
{
	if (!-e "$cvsroot/$project/$subdir/$module,v")
	{
		print "$cvsroot/$project/$subdir/$module,v\n";
		print STDERR "$me: $module does not appear to be checked into CVS\n";
		exit 2;
	}
}


#################################
# MAIN
#################################

my $user = $::ENV{USER};
$user = $::ENV{USERNAME} if !$user;

my @lockers = cvs::getLockers($cvsroot, $module);
if (@lockers)
{
	# check to see if the user is already editing the file
	foreach my $editor (@lockers) 
	{
		if ( $editor =~/\b$user\b/ )
		{
			print "$me info:  you are already editing the file.\n";
			exit 1;
		}
	}

	# inform user that others are editing the file
	print "$me info: $module is currently being edited by: @lockers\n";
	if ( !$offsite )
	{
		if (!get_yn("Do you want to edit it anyway?"))
		{
			exit 1;
		}
	}
}

system("cvs -r -d $cvsroot update $module");
system("cvs -d $cvsroot edit $module");
system("cvs -d $cvsroot watch add -a edit $module");
if ( !$offsite )
{
	system("chgrp guestpc $module") unless $?;
	system("chmod g+w $module") unless $?;
}

print "done\n" unless $?;
