#! /usr/bin/perl

use strict;
use warnings;

use VCtools::Base;
use VCtools::Args;
use VCtools::Common;


#################################
# OPTIONS AND ENVIRONMENT VARS
#################################

VCtools::switch('latest', 'l', 'show only latest log (same as -n1)');
VCtools::switch('number', 'n', 'show only howmany logs (default: 100)', 'howmany');
VCtools::args('files', 'list', 'file(s) (or directory/ies) to show logs for');
VCtools::getopts();

# figure out how many logs to show
my $howmany = VCtools::latest() ? 1 : VCtools::number() || 100;
print STDERR "number of logs to print: $howmany\n" if DEBUG >= 3;

# remember, directories are files too
my @files = VCtools::files();
print STDERR "log for files: @files\n" if DEBUG >= 3;


#################################
# CHECK FOR ERRORS
#################################

my $proj = VCtools::verify_files_and_group(@files);

# get statuses for everything at once (quicker that way)
VCtools::cache_file_status(@files, { DONT_RECURSE => 1 });

foreach my $file (@files)
{
	unless (VCtools::exists_in_vc($file))
	{
		VCtools::fatal_error("$file is not in VC") unless VCtools::ignore_errors();
		exit;
	}
}


#################################
# MAIN
#################################

my $count = @files;
foreach (@files)
{
	my $header_line = @files > 1 ? "\n---> $_ <---\n" : "";

	VCtools::get_log($_, $howmany);
	if (VCtools::latest())
	{
		print $header_line, VCtools::log_lines($proj, 0);
	}
	else
	{
		VCtools::page_output('.vclog', $header_line, VCtools::log_lines($proj));
		print "\n";
		VCtools::prompt_to_continue("$count more files to view") if --$count;
	}
}

print "\ndone\n";


#################################
# SUBS
#################################
