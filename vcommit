#! /usr/bin/perl

use strict;
use warnings;

use Geek::Dev::Debug(0);

use Getopt::Std;

use VCtools::common;


#################################
# OPTIONS AND ARGUMENTS
#################################

VCtools::process_args("file_or_dir", "[...]");

# remember, directories are files too
my @files = @ARGV;


#################################
# CHECK FOR ERRORS
#################################

VCtools::verify_files_and_group(@files);

# get statuses for everything at once (quicker that way)
VCtools::cache_file_status(@files);
# right here, think of a way to do similar for lockers

my @files_to_add;
foreach my $file (@files)
{
	unless (VCtools::exists_in_vc($file))
	{
		if (VCtools::yesno("$file does not exist in VC; add it?"))
		{
			push @files_to_add, $file;
		}
		else
		{
			VCtools::fatal_error("$file is not in VC")
		}
	}

=not_working_with_svn_yet
	VCtools::fatal_error("you did a 'get' on $file")
			unless VCtools::user_is_a_locker($file);

	if (@lockers > 1)
	{
		# user must be in the list, else would have err'ed out above
		# but more than one name is in the list, so ...
		print STDERR "$me: other people are currently editing this file!\n";
		print STDERR "     $file is currently being edited by: @lockers\n";
		if (not yesno("Do you want to proceed anyway?"))
		{
			exit 1;
		}
	}
=cut

	VCtools::fatal_error("no changes to commit "
			. "(vunget to remove your editing status)")
					unless VCtools::modified_from_vc($file);
}


#################################
# MAIN
#################################

# for CVS, at a minimum, would need to check for sticky tags here
# not sure what to in a generic fashion

VCtools::add_files(@files_to_add) if @files_to_add;
VCtools::commit_files(@files);
=not_working_with_svn_yet
VCtools::release_edit_flag(@files);
=cut

print "done\n";


#################################
# SUBS
#################################
